{"version":3,"sources":["reportWebVitals.ts","config/settings.ts","service/localstorage.ts","context/app.tsx","containers/home.tsx","components/app.tsx","components/chart.tsx","components/point.tsx","components/table.tsx","components/input.tsx","components/form.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","pointSettings","chartSettings","stepArranger","maxvalueForYInput","addPointToLocalStorage","points","localStorage","setItem","JSON","stringify","AppContext","React","createContext","useAppContext","useContext","AppContextProvider","children","data","useState","setPoints","contextValue","updatePoints","point","prevState","map","_point","id","x","y","label","deletePoint","updatedPoints","filter","addPoint","maxId","reduce","acc","checkValueFromUserInput","userInput","temp","input_value_without_e_letter","typedValue","replaceAll","temporaryInputValue","parseInt","inputId","includes","maxValue","minValue","Provider","value","Home","window","innerWidth","windowWidth","setWindowWidth","handleResize","useEffect","removeEventListener","addEventListener","className","style","flexDirection","alignItems","index","marginTop","App","parse","getItem","Chart","Point","dx","dy","setOffset","startX","setStartX","startY","setStartY","setShowLabel","pointRef","useRef","elementX","Number","current","getBoundingClientRect","elementY","ref","transform","draggable","onMouseOut","onMouseOver","onMouseDown","onDragEnd","e","newDx","pageX","newDy","pageY","Table","whichInputId","setWhichInputId","type","autoFocus","onChange","newLabel","target","slice","dataset","Math","round","newInputCheck","onClick","Input","placeholder","Form","setLabel","setDx","setDy","event","alert","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.52fd6447.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const pointSettings = {\n  width: 15,\n  height: 15,\n  startingPointX: 0,\n  startingPointY: 0,\n};\n\nexport const chartSettings = {\n  borderWidth: 2,\n  width: 400,\n  height: 400,\n};\n\nexport const stepArranger = 3.82;\n\nexport const maxvalueForYInput = 382;\n","import { PointsType } from \"../models\";\n\nexport const getPointsFromLocalStorage = () => {\n  return JSON.parse(localStorage.getItem(\"points\") as any) as PointsType;\n};\n\nexport const addPointToLocalStorage = (points: PointsType) => {\n  localStorage.setItem(\"points\", JSON.stringify(points));\n};\n","import React from \"react\";\nimport { AppContextModel, PointsType, PointType, UserInputControlType } from \"../models\";\nimport { chartSettings, pointSettings, stepArranger, maxvalueForYInput } from \"../config\";\nimport { addPointToLocalStorage } from \"../service\";\n\nexport const AppContext = React.createContext<AppContextModel>({ points: [] } as any);\nexport const useAppContext = () => React.useContext(AppContext);\n\nexport const AppContextProvider: React.FC<{ data?: PointsType }> = ({ children, data }) => {\n  const [points, setPoints] = React.useState<PointsType>(data || []);\n\n  const updatePoints = (point: PointType) => {\n    setPoints((prevState: PointsType) => {\n      return prevState.map((_point: PointType) => {\n        if (_point.id === point.id) {\n          _point.x = point.x;\n          _point.y = point.y;\n          _point.label = point.label;\n        }\n\n        return _point;\n      });\n    });\n\n    addPointToLocalStorage(points);\n  };\n\n  const deletePoint = (point: PointType) => {\n    setPoints((prevState: PointsType) => {\n      const updatedPoints = prevState.filter((_point: PointType) => _point.id !== point.id);\n      addPointToLocalStorage(updatedPoints);\n\n      return updatedPoints;\n    });\n  };\n\n  const addPoint = (point: PointType) => {\n    const maxId = points.reduce((acc, _point) => (acc = acc > _point.id ? acc : _point.id), 0);\n    point.id = maxId + 1;\n\n    setPoints([...points, point]);\n\n    addPointToLocalStorage([...points, point]);\n  };\n\n  const checkValueFromUserInput = (userInput: UserInputControlType) => {\n    let temp: number;\n    const input_value_without_e_letter: string = userInput.typedValue.replaceAll(\"e\", \"\");\n    const temporaryInputValue: number = parseInt(input_value_without_e_letter);\n\n    if ((userInput.inputId || \"\").includes(\"point-y\")) {\n      //y axis input control\n      if (temporaryInputValue) {\n        temp = maxvalueForYInput - temporaryInputValue * stepArranger;\n      } else {\n        temp = maxvalueForYInput;\n      }\n    } else {\n      //x axis input control\n      temp = temporaryInputValue * stepArranger || 0;\n    }\n\n    if (temp > userInput.maxValue) {\n      return userInput.maxValue;\n    } else if (temp <= userInput.minValue) {\n      return userInput.minValue;\n    }\n    return temp;\n  };\n\n  const contextValue: AppContextModel = {\n    points,\n    updatePoints,\n    deletePoint,\n    addPoint,\n    checkValueFromUserInput,\n  };\n\n  return <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>;\n};\n","import React, { useState } from \"react\";\nimport { Chart, Form, Point, Table } from \"../components\";\nimport { useAppContext } from \"../context\";\nimport { PointType } from \"../models\";\nimport \"../styles/home.css\";\n\nexport const Home: React.FC = () => {\n  const { points } = useAppContext();\n  const [windowWidth, setWindowWidth] = React.useState<number>(window.innerWidth | 0);\n\n  const handleResize = () => {\n    setWindowWidth(window.innerWidth);\n  };\n\n  React.useEffect(() => {\n    window.removeEventListener(\"resize\", handleResize);\n    window.addEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div\n      className=\"home-container\"\n      style={\n        windowWidth < 930\n          ? { flexDirection: \"column\", alignItems: \"center\" }\n          : { flexDirection: \"row\", alignItems: \"start\" }\n      }>\n      <div className=\"chart-wrapper\">\n        <Chart>\n          {points.map((point: PointType, index: number) => (\n            <Point\n              key={`${point.id}-${point.label}-${point.x}-${point.y}-${index}`}\n              id={point.id}\n              x={point.x}\n              y={point.y}\n              label={point.label}\n            />\n          ))}\n        </Chart>\n      </div>\n      <div\n        className=\"customer-typing-reaction-wrapper\"\n        style={{ marginTop: windowWidth < 930 ? \"20px\" : \"\" }}>\n        <Table />\n        <Form />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Home } from \"../containers\";\nimport { AppContextProvider } from \"../context\";\nimport { getPointsFromLocalStorage } from \"../service\";\n\nexport const App: React.FC = () => {\n  const points = getPointsFromLocalStorage();\n\n  return (\n    <AppContextProvider data={points}>\n      <Home />\n    </AppContextProvider>\n  );\n};\n","import React from \"react\";\nimport \"../styles/chart.css\";\n\nexport const Chart: React.FC = ({ children }) => {\n  return (\n    <div className=\"chart-container\">\n      <span className=\"chart-text chart-left-text\">Ability To Execute --&gt;</span>\n      <div className=\"chart-area-label-container\">\n        <div>\n          <p className=\"chart-label-wrapper-paragraph\">\n            <span>Challengers</span>\n          </p>\n        </div>\n        <div>\n          <p className=\"chart-label-wrapper-paragraph\">\n            <span>Leaders</span>\n          </p>\n        </div>\n        <div>\n          <p className=\"chart-label-wrapper-paragraph\">\n            <span>Niche Players</span>\n          </p>\n        </div>\n        <div>\n          <p className=\"chart-label-wrapper-paragraph\">\n            <span>Visionaries</span>\n          </p>\n        </div>\n      </div>\n      {children}\n      <span className=\"chart-text chart-bottom-text\">Completeness Of Vision --&gt;</span>\n    </div>\n  );\n};\n","import React, { DragEvent, RefObject } from \"react\";\nimport { chartSettings, pointSettings } from \"../config\";\nimport { useAppContext } from \"../context\";\nimport { PointType } from \"../models\";\nimport \"../styles/point.css\";\n\nexport const Point: React.FC<PointType> = ({ label, x, y, id }) => {\n  const [{ dx, dy }, setOffset] = React.useState({ dx: x, dy: y });\n  const [startX, setStartX] = React.useState<number>(0);\n  const [startY, setStartY] = React.useState<number>(0);\n  const [showLabel, setShowLabel] = React.useState(false);\n  const pointRef: RefObject<HTMLDivElement> = React.useRef(null);\n  const elementX = Number(pointRef.current?.getBoundingClientRect().x) || 0;\n  const elementY = Number(pointRef.current?.getBoundingClientRect().y) || 0;\n  const { updatePoints } = useAppContext();\n\n  const onMouseDown = () => {\n    setStartX(elementX - dx);\n    setStartY(elementY - dy);\n  };\n\n  const onDragEnd = (e: DragEvent) => {\n    let newDx = e.pageX - startX;\n    let newDy = e.pageY - startY;\n\n    if (newDx < 0) {\n      newDx = 0;\n    }\n\n    if (newDx > chartSettings.width - pointSettings.width - chartSettings.borderWidth - 1) {\n      newDx = chartSettings.width - pointSettings.width - chartSettings.borderWidth - 1;\n    }\n\n    if (newDy < 0) {\n      newDy = 0;\n    }\n\n    if (newDy > chartSettings.height - pointSettings.height - chartSettings.borderWidth - 1) {\n      newDy = chartSettings.height - pointSettings.height - chartSettings.borderWidth - 1;\n    }\n\n    setOffset({ dx: newDx, dy: newDy });\n    updatePoints({ id, x: newDx, y: newDy, label });\n  };\n\n  const onMouseOut = () => {\n    setShowLabel(false);\n  };\n\n  const onMouseOver = () => {\n    setShowLabel(true);\n  };\n\n  return (\n    <div\n      ref={pointRef}\n      className=\"point-container\"\n      style={{\n        transform: `translate3d(${dx}px, ${dy}px, 0)`,\n      }}\n      draggable\n      onMouseOut={onMouseOut}\n      onMouseOver={onMouseOver}\n      onMouseDown={onMouseDown}\n      onDragEnd={onDragEnd}>\n      {<span className=\"label\">{label}</span>}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useAppContext } from \"../context\";\nimport { PointsType, PointType, UserInputControlType, DatasetType } from \"../models\";\nimport { chartSettings, pointSettings, stepArranger, maxvalueForYInput } from \"../config\";\n\nimport \"../styles/table.css\";\n\nexport const Table: React.FC = () => {\n  const { points, deletePoint, updatePoints, checkValueFromUserInput } = useAppContext();\n  const [whichInputId, setWhichInputId] = React.useState<null | undefined | string>(\"\");\n\n  return (\n    <div className=\"table-container\">\n      <div className=\"table-item table-header\">\n        <div>\n          <p className=\"table-col-title\">Label</p>\n        </div>\n        <div>\n          <p className=\"table-col-title\">Vision</p>\n        </div>\n        <div>\n          <p className=\"table-col-title\">Ability</p>\n        </div>\n        <div>\n          <p className=\"table-col-title\">Delete</p>\n        </div>\n      </div>\n      {points?.map((point: PointType, index: number) => (\n        <div className=\"table-item\" key={`${point.label}-${point.x}-${point.y}-${index}`}>\n          <div>\n            <input\n              data-id={\"point-label-input-\" + index}\n              type=\"text\"\n              className=\"table-point-input-label-shower\"\n              value={point.label}\n              autoFocus={whichInputId === \"point-label-input-\" + index}\n              onChange={(e: { target: { value: string; dataset: { id?: string } } }) => {\n                let newLabel: string;\n                //max label length 50 char\n                newLabel = e.target.value.slice(0, 30);\n\n                setWhichInputId(e.target.dataset.id);\n\n                updatePoints({ ...point, label: newLabel });\n              }}\n            />\n          </div>\n          <div>\n            <input\n              data-id={\"point-x-input-\" + index}\n              type=\"number\"\n              className=\"table-point-input-x-shower\"\n              value={Math.round(point.x / stepArranger)}\n              autoFocus={whichInputId === \"point-x-input-\" + index}\n              onChange={(e: { target: { value: string; dataset: { id?: string } } }) => {\n                const newInputCheck: UserInputControlType = {\n                  inputId: e.target.dataset.id,\n                  typedValue: e.target.value,\n                  maxValue: 381,\n                  minValue: 0,\n                };\n\n                setWhichInputId(e.target.dataset.id);\n\n                updatePoints({ ...point, x: checkValueFromUserInput(newInputCheck) });\n              }}\n            />\n          </div>\n          <div>\n            <input\n              data-id={\"point-y-input-\" + index}\n              type=\"number\"\n              className=\"table-point-input-y-shower\"\n              value={\n                point.y >= 0 ? Math.round((maxvalueForYInput - Number(point.y)) / stepArranger) : 0\n              }\n              autoFocus={whichInputId === \"point-y-input-\" + index}\n              onChange={(e: { target: { value: string; dataset: { id?: string } } }) => {\n                const newInputCheck: UserInputControlType = {\n                  inputId: e.target.dataset.id,\n                  typedValue: e.target.value || \"0\",\n                  maxValue: maxvalueForYInput,\n                  minValue: 0,\n                };\n\n                setWhichInputId(e.target.dataset.id);\n\n                updatePoints({ ...point, y: checkValueFromUserInput(newInputCheck) });\n              }}\n            />\n          </div>\n          <div className=\"delete-button\">\n            <button className=\"delete-button-element\" onClick={() => deletePoint(point)}>\n              Delete\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { ChangeEvent } from \"react\";\nimport \"../styles/input.css\";\n\nexport const Input: React.FC<Props> = ({ label, type, onChange }) => {\n  return (\n    <div className=\"input-container\">\n      <input onChange={onChange} placeholder={label} type={type} />\n    </div>\n  );\n};\n\ninterface Props {\n  label: string;\n  type: \"text\" | \"number\";\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n}\n","import React from \"react\";\nimport { chartSettings, pointSettings, stepArranger, maxvalueForYInput } from \"../config\";\nimport { Input } from \"./input\";\nimport \"../styles/form.css\";\nimport { useAppContext } from \"../context\";\n\nexport const Form: React.FC = () => {\n  const [label, setLabel] = React.useState(\"\");\n  const [dx, setDx] = React.useState(-1);\n  const [dy, setDy] = React.useState(-1);\n  const { addPoint } = useAppContext();\n\n  const submitForm = () => {\n    if (!label || (!dx && dx !== 0) || (!dy && dy !== 0)) {\n      alert(\"No blank space must be left\");\n\n      return;\n    }\n\n    if (dx < 0 || dx > 100) {\n      //chartSettings.width - pointSettings.width - chartSettings.borderWidth - 1\n      alert(`Vision must be between 0 and 100`);\n\n      return;\n    }\n\n    if (dy < 0 || dy > 100) {\n      //chartSettings.height - pointSettings.height - chartSettings.borderWidth - 1\n      alert(`Ability must be between 0 and 100`);\n\n      return;\n    }\n\n    if (label.length > 50) {\n      alert(\"The length of the label must be less than 50\");\n\n      return;\n    }\n\n    addPoint({ id: -1, x: dx * stepArranger, y: maxvalueForYInput - dy * stepArranger, label });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <div className=\"inputs-container\">\n        <Input\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => setLabel(event.target.value)}\n          type=\"text\"\n          label=\"Label\"\n        />\n        <Input\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setDx(Number(event.target.value))\n          }\n          type=\"number\"\n          label=\"Vision\"\n        />\n        <Input\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n            setDy(Number(event.target.value))\n          }\n          type=\"number\"\n          label=\"Ability\"\n        />\n        <div className=\"button-container\">\n          <button onClick={submitForm}>Add Point</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./components\";\nimport \"./styles/reset.css\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}